from django.db import models
import datetime
from django.core.validators import URLValidator

# Create your models here.
class stats(models.Model):
	team = models.CharField(max_length=3)
	game = models.IntegerField(null=True)
	date = models.DateField(("Date"),default=datetime.date.today)
	home = models.CharField(max_length=4, null=True)
	opponent = models.CharField(max_length=3, null=True)
	winorloss = models.CharField(max_length=1, null=True)
	teampoints = models.IntegerField(null=True)
	opponentpoints = models.IntegerField(null=True)
	fieldgoals = models.IntegerField(null=True)
	fieldgoalsattempted = models.IntegerField(null=True)
	fieldgoalspercent = models.DecimalField(max_digits=4,decimal_places=3,null=True)
	x3pointshots = models.IntegerField(null=True)
	x3pointshotsattempted = models.IntegerField(null=True)
	x3pointshotspercent = models.DecimalField(max_digits=4,decimal_places=3, null=True)
	freethrows = models.IntegerField(null=True)
	freethrowsattempted = models.IntegerField(null=True)
	freethrowspercent = models.DecimalField(max_digits=4,decimal_places=3,null=True)
	offrebounds = models.IntegerField(null=True)
	totalrebounds = models.IntegerField(null=True)
	assists = models.IntegerField(null=True)
	steals = models.IntegerField(null=True)
	blocks = models.IntegerField(null=True)
	turnovers = models.IntegerField(null=True)
	totalfouls = models.IntegerField(null=True)
	oppfieldgoals = models.IntegerField(null=True)
	oppfieldgoalsattempted = models.IntegerField(null=True)
	oppfieldgoalspercent = models.DecimalField(max_digits=4,decimal_places=3,null=True)
	opp3pointshots = models.IntegerField(null=True)
	opp3pointshotsattempted = models.IntegerField(null=True)
	opp3pointshotspercent = models.DecimalField(max_digits=4,decimal_places=3,null=True)
	oppfreethrows = models.IntegerField(null=True)
	oppfreethrowsattempted = models.IntegerField(null=True)
	oppfreethrowspercent = models.DecimalField(max_digits=4,decimal_places=3,null=True)
	oppoffrebounds = models.IntegerField(null=True)
	opptotalrebounds = models.IntegerField(null=True)
	oppassists = models.IntegerField(null=True)
	oppsteals = models.IntegerField(null=True)
	oppblocks = models.IntegerField(null=True)
	oppturnovers = models.IntegerField(null=True)
	opptotalfouls = models.IntegerField(null=True)
	def __unicode__(self):
		return str(self.team)
	
class teaminfo(models.Model):
	teamcode=models.CharField(max_length=3)
	teamname=models.CharField(max_length=50)
	officialSite=models.TextField(validators=[URLValidator()],null=True)
	#twitter=models.CharField(max_length=100,null=True)
	found=models.IntegerField(null=True)
	city=models.CharField(max_length=50,null=True)
	arena=models.CharField(max_length=50,null=True)
	owner=models.CharField(max_length=50,null=True)
	general_manager=models.CharField(max_length=50,null=True)
	head_coach=models.CharField(max_length=50,null=True)
	g_league=models.CharField(max_length=50,null=True)
	championships=models.IntegerField(null=True)
	retired_numbers=models.IntegerField(null=True)
	
	def __unicode__(self):
		return str(self.teamname)


class teamplayers(models.Model):
	location=models.CharField(max_length=20,null=True)
	team_name=models.CharField(max_length=50, null=True)
	player=models.CharField(max_length=50,null=True)
	jersey=models.CharField(max_length=10,null=True)
	position=models.CharField(max_length=10,null=True)
	height=models.CharField(max_length=10,null=True)
	weight=models.CharField(max_length=10,null=True)
	birthday=models.CharField(max_length=50,null=True)
	age=models.IntegerField(null=True)
	experience=models.CharField(max_length=10,null=True)
	school=models.CharField(max_length=50,null=True)
	def __unicode__(self):
		return str(self.player)